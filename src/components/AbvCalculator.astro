---
import "../styles/GlobalStyles.css";
---
<script>
    class AbvCalculator extends HTMLElement {
        connectedCallback() {
            const calculateButton = this.querySelector('#calculate-abv');

            const originalGravity = (this.querySelector('#original-gravity') as HTMLInputElement);
            const finalGravity = (this.querySelector('#final-gravity') as HTMLInputElement);

            const result = (this.querySelector('#result') as HTMLElement);

            calculateButton?.addEventListener('click', () => {
                const og = parseFloat(originalGravity.value);
                const fg = parseFloat(finalGravity.value);

                if (isNaN(og) || isNaN(fg)) {
                    result.textContent = "Numbers required in input fields";
                } else {
                    const abv = (og - fg) * 131.25;
                    const atten = (og - fg)/(og - 1) * 100;
                
                    const abvResult = abv.toFixed(2).toString().concat("%");
                    const attenResult = atten.toFixed(2).toString().concat("%");
                    result.textContent = 'ABV: '.concat(abvResult, ' Attenuation: ', attenResult);
                }
            })
        }
    }
    
    customElements.define('abv-calculator', AbvCalculator);
</script>

<abv-calculator id="abv-wrapper">   
    <h1>ABV Calculator</h1>
    <form>
        <fieldset>
            <label for="original-gravity">Original Gravity(OG)</label>
            <input type="text" id="original-gravity"/>
        </fieldset>
        <fieldset>
            <label for="final-gravity">Final Gravity(FG)</label>
            <input type="text" id="final-gravity"/>
        </fieldset>
        <button type="button" id="calculate-abv">Calculate</button>
    </form>
    <p id="result"></p>
</abv-calculator> 

<style>
    #abv-wrapper {
        display: flex;
        align-items: center;
        flex-direction: column;
        width: 100%;
    }
    fieldset, form {
        display: flex;
        align-items: center;
        flex-direction: column;
        border: none;
    }
    button {
        font-size: 2rem;
        border-radius: 8px;
        color: var(--header-text-color);
        background-color: var(--calculate-button-color);
        margin-top: 8px;
    }
    h1, label, p {
        font-family: Arial, Helvetica, sans-serif;
        font-size: 1.5rem;
        color: var(--header-text-color);
    }
    h1 {
        font-size: 2rem;
    }
    input {
        border: none;
        border-radius: 2px;
        font-size: 2rem;
        height: 3rem;
        width: 50%;
    }
    label {
        width: fit-content;
    }
    p {
        color: var(--result-text-color);
    }
</style>